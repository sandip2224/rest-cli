{
  "stats": {
    "suites": 6,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2021-12-22T05:31:38.534Z",
    "end": "2021-12-22T05:31:46.467Z",
    "duration": 7933,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b82fd97a-919e-4807-9e5a-cf98f642b9d4",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "97fac263-1211-4cd3-8316-4dc769083fe3",
          "title": "Books",
          "fullFile": "C:\\Users\\User\\Desktop\\CLI-REST-Ingestor\\test\\todoRoute.test.js",
          "file": "\\test\\todoRoute.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Books\"",
              "fullTitle": "Books \"before each\" hook in \"Books\"",
              "timedOut": false,
              "duration": 243,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Before each test we empty the database\n       todoModel.deleteMany({}, (err) => {\n           done()\n       })",
              "err": {},
              "uuid": "041e9ae7-ab94-4e03-a8bf-c2fc303d3654",
              "parentUUID": "97fac263-1211-4cd3-8316-4dc769083fe3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6b1d7699-5bd5-41c4-a6f7-29070f62e436",
              "title": "/GET all todos",
              "fullFile": "C:\\Users\\User\\Desktop\\CLI-REST-Ingestor\\test\\todoRoute.test.js",
              "file": "\\test\\todoRoute.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should GET all the todos",
                  "fullTitle": "Books /GET all todos It should GET all the todos",
                  "timedOut": false,
                  "duration": 279,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get('/api/todos')\n    .end((err, res) => {\n            res.should.have.status(200)\n            res.body.should.have.property('count')\n            res.body.tasks.should.be.a('array')\n        done()\n    })",
                  "err": {},
                  "uuid": "98bca654-c287-4bd1-b7dc-fbf0156df757",
                  "parentUUID": "6b1d7699-5bd5-41c4-a6f7-29070f62e436",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "98bca654-c287-4bd1-b7dc-fbf0156df757"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 279,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1acc761f-95c7-41ec-a2be-b70ee1700eb3",
              "title": "/GET a todo",
              "fullFile": "C:\\Users\\User\\Desktop\\CLI-REST-Ingestor\\test\\todoRoute.test.js",
              "file": "\\test\\todoRoute.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should GET a single todo",
                  "fullTitle": "Books /GET a todo It should GET a single todo",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get('/api/todo/123')\n    .end((err, res) => {\n            res.should.have.status(422)\n            res.body.message.should.be.a('string')\n            res.body.message.should.equal('Task ID is not valid!!')\n        done()\n    })",
                  "err": {},
                  "uuid": "3e207f8a-5ac3-42da-83f0-b6272ec3016a",
                  "parentUUID": "1acc761f-95c7-41ec-a2be-b70ee1700eb3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should not GET a non-existent todo",
                  "fullTitle": "Books /GET a todo It should not GET a non-existent todo",
                  "timedOut": false,
                  "duration": 268,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get('/api/todo/61c29b8a096af42f58d09512')\n    .end((err, res) => {\n            res.should.have.status(404)\n            res.body.message.should.be.a('string')\n            res.body.message.should.equal('No todo found for given id!!')\n        done()\n    })",
                  "err": {},
                  "uuid": "7e505d43-78fd-434a-8ae3-9a234bcae774",
                  "parentUUID": "1acc761f-95c7-41ec-a2be-b70ee1700eb3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3e207f8a-5ac3-42da-83f0-b6272ec3016a",
                "7e505d43-78fd-434a-8ae3-9a234bcae774"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 277,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cc053df4-9033-4cb5-bf5d-f9ad6a54a1f0",
              "title": "/POST a new todo",
              "fullFile": "C:\\Users\\User\\Desktop\\CLI-REST-Ingestor\\test\\todoRoute.test.js",
              "file": "\\test\\todoRoute.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should not POST a todo without a defined task field",
                  "fullTitle": "Books /POST a new todo It should not POST a todo without a defined task field",
                  "timedOut": false,
                  "duration": 36,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let todo = {\n    task: ''\n}\n        chai.request(server)\n.post('/api/todo')\n.send(todo)\n.end((err, res) => {\n        res.should.have.status(500)\n        res.body.should.be.a('object')\n        res.body.should.have.property('message')\n        res.body.should.have.property('error')\n    done()\n})",
                  "err": {},
                  "uuid": "23166f4d-4aba-4399-9d58-c16d2ff9dc26",
                  "parentUUID": "cc053df4-9033-4cb5-bf5d-f9ad6a54a1f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should not POST a todo with a task field more than 30 characters",
                  "fullTitle": "Books /POST a new todo It should not POST a todo with a task field more than 30 characters",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let todo = {\n    task: 'abcdabcdabcdabcdabcdabcdabcdabcd'\n}\n        chai.request(server)\n.post('/api/todo')\n.send(todo)\n.end((err, res) => {\n        res.should.have.status(500)\n        res.body.should.be.a('object')\n        res.body.should.have.property('message')\n        res.body.should.have.property('error')\n    done()\n})",
                  "err": {},
                  "uuid": "8960a094-3516-4950-81b0-de61d6c20bfb",
                  "parentUUID": "cc053df4-9033-4cb5-bf5d-f9ad6a54a1f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should POST a todo with a valid task field",
                  "fullTitle": "Books /POST a new todo It should POST a todo with a valid task field",
                  "timedOut": false,
                  "duration": 375,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let todo = {\n    task: 'Test the api!!'\n}\n        chai.request(server)\n.post('/api/todo')\n.send(todo)\n.end((err, res) => {\n        res.should.have.status(201)\n        res.body.should.be.a('object')\n        res.body.message.should.equal('Task added successfully!!')\n        res.body.createdTodo.should.be.a('object')\n    done()\n})",
                  "err": {},
                  "uuid": "32039c3a-b454-413d-b989-1b4ac3ed5c96",
                  "parentUUID": "cc053df4-9033-4cb5-bf5d-f9ad6a54a1f0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "23166f4d-4aba-4399-9d58-c16d2ff9dc26",
                "8960a094-3516-4950-81b0-de61d6c20bfb",
                "32039c3a-b454-413d-b989-1b4ac3ed5c96"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 428,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8803259d-bcdf-41eb-8962-02eb5f28787d",
              "title": "/PATCH an existing todo",
              "fullFile": "C:\\Users\\User\\Desktop\\CLI-REST-Ingestor\\test\\todoRoute.test.js",
              "file": "\\test\\todoRoute.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should not process an invalid todo id",
                  "fullTitle": "Books /PATCH an existing todo It should not process an invalid todo id",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let todo = {\n    completed: 'true'\n}\n        chai.request(server)\n.patch('/api/todo/123')\n.send(todo)\n.end((err, res) => {\n        res.should.have.status(422)\n        res.body.should.be.a('object')\n        res.body.should.have.property('message')\n        res.body.message.should.equal('Task ID is not valid!!')\n    done()\n})",
                  "err": {},
                  "uuid": "0728fbee-cae0-4314-8386-533a5f71adb1",
                  "parentUUID": "8803259d-bcdf-41eb-8962-02eb5f28787d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should not PATCH an undefined todo id",
                  "fullTitle": "Books /PATCH an existing todo It should not PATCH an undefined todo id",
                  "timedOut": false,
                  "duration": 255,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let todo = {\n    completed: 'true'\n}\n        chai.request(server)\n.patch('/api/todo/61c29b8a096af42f58d09512')\n.send(todo)\n.end((err, res) => {\n        res.should.have.status(404)\n        res.body.should.be.a('object')\n        res.body.should.have.property('message')\n        res.body.message.should.equal('No todo found for given id!!')\n    done()\n})",
                  "err": {},
                  "uuid": "f13caac0-8217-4f66-84ae-327a5e07d6a7",
                  "parentUUID": "8803259d-bcdf-41eb-8962-02eb5f28787d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0728fbee-cae0-4314-8386-533a5f71adb1",
                "f13caac0-8217-4f66-84ae-327a5e07d6a7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 261,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "78d77fa6-f035-4511-9ea1-22df504b20a6",
              "title": "/DELETE an existing todo",
              "fullFile": "C:\\Users\\User\\Desktop\\CLI-REST-Ingestor\\test\\todoRoute.test.js",
              "file": "\\test\\todoRoute.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should not process an invalid todo id",
                  "fullTitle": "Books /DELETE an existing todo It should not process an invalid todo id",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .delete('/api/todo/123')\n    .end((err, res) => {\n            res.should.have.status(422)\n            res.body.should.be.a('object')\n            res.body.should.have.property('message')\n            res.body.message.should.equal('Todo ID is not valid!!')\n        done()\n    })",
                  "err": {},
                  "uuid": "0be5554e-5da3-4e40-abff-1ef875d33f7a",
                  "parentUUID": "78d77fa6-f035-4511-9ea1-22df504b20a6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should not DELETE an undefined todo id",
                  "fullTitle": "Books /DELETE an existing todo It should not DELETE an undefined todo id",
                  "timedOut": false,
                  "duration": 260,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .delete('/api/todo/61c29b8a096af42f58d09512')\n    .end((err, res) => {\n            res.should.have.status(404)\n            res.body.should.be.a('object')\n            res.body.should.have.property('message')\n            res.body.message.should.equal('Todo details not found!!')\n        done()\n    })",
                  "err": {},
                  "uuid": "e527990c-4fe9-4f13-b5db-62c22d60abcd",
                  "parentUUID": "78d77fa6-f035-4511-9ea1-22df504b20a6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0be5554e-5da3-4e40-abff-1ef875d33f7a",
                "e527990c-4fe9-4f13-b5db-62c22d60abcd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 273,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}