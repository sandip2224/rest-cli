{
  "stats": {
    "suites": 6,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2021-12-23T05:14:07.220Z",
    "end": "2021-12-23T05:14:15.315Z",
    "duration": 8095,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1cd8735b-3316-40fa-8106-8d95c27b2dec",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d6360038-2c2a-416b-be27-f311bb499d8f",
          "title": "Books",
          "fullFile": "C:\\Users\\User\\Desktop\\CLI-REST-Ingestor\\test\\todoRoute.test.js",
          "file": "\\test\\todoRoute.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Books\"",
              "fullTitle": "Books \"before each\" hook in \"Books\"",
              "timedOut": false,
              "duration": 247,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Before each test we empty the database\n       todoModel.deleteMany({}, (err) => {\n           done()\n       })",
              "err": {},
              "uuid": "15a15d01-8f93-4961-8293-0fe7454faba4",
              "parentUUID": "d6360038-2c2a-416b-be27-f311bb499d8f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "335b7c43-debf-41ac-a951-786387e210c7",
              "title": "/GET all todos",
              "fullFile": "C:\\Users\\User\\Desktop\\CLI-REST-Ingestor\\test\\todoRoute.test.js",
              "file": "\\test\\todoRoute.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should GET all the todos",
                  "fullTitle": "Books /GET all todos It should GET all the todos",
                  "timedOut": false,
                  "duration": 316,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get('/api/todos')\n    .end((err, res) => {\n            res.should.have.status(200)\n            res.body.should.have.property('count')\n            res.body.tasks.should.be.a('array')\n        done()\n    })",
                  "err": {},
                  "uuid": "3a3cc7f9-91e9-4015-9e9d-54b08024b65a",
                  "parentUUID": "335b7c43-debf-41ac-a951-786387e210c7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3a3cc7f9-91e9-4015-9e9d-54b08024b65a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 316,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "187329bb-9bcf-4612-b266-9aa816edbeb1",
              "title": "/GET a todo",
              "fullFile": "C:\\Users\\User\\Desktop\\CLI-REST-Ingestor\\test\\todoRoute.test.js",
              "file": "\\test\\todoRoute.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should GET a single todo",
                  "fullTitle": "Books /GET a todo It should GET a single todo",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get('/api/todo/123')\n    .end((err, res) => {\n            res.should.have.status(422)\n            res.body.message.should.be.a('string')\n            res.body.message.should.equal('Task ID is not valid!!')\n        done()\n    })",
                  "err": {},
                  "uuid": "4fed6914-229a-49ec-a14c-08a71e6a41c7",
                  "parentUUID": "187329bb-9bcf-4612-b266-9aa816edbeb1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should not GET a non-existent todo",
                  "fullTitle": "Books /GET a todo It should not GET a non-existent todo",
                  "timedOut": false,
                  "duration": 318,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get('/api/todo/61c29b8a096af42f58d09512')\n    .end((err, res) => {\n            res.should.have.status(404)\n            res.body.message.should.be.a('string')\n            res.body.message.should.equal('No todo found for given id!!')\n        done()\n    })",
                  "err": {},
                  "uuid": "32a2ded7-f143-4fe0-bf4d-acd140eef2a5",
                  "parentUUID": "187329bb-9bcf-4612-b266-9aa816edbeb1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4fed6914-229a-49ec-a14c-08a71e6a41c7",
                "32a2ded7-f143-4fe0-bf4d-acd140eef2a5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 328,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9a97f899-d57a-4c8a-9096-7cce4c874fc2",
              "title": "/POST a new todo",
              "fullFile": "C:\\Users\\User\\Desktop\\CLI-REST-Ingestor\\test\\todoRoute.test.js",
              "file": "\\test\\todoRoute.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should not POST a todo without a defined task field",
                  "fullTitle": "Books /POST a new todo It should not POST a todo without a defined task field",
                  "timedOut": false,
                  "duration": 112,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let todo = {\n    task: ''\n}\n        chai.request(server)\n.post('/api/todo')\n.send(todo)\n.end((err, res) => {\n        res.should.have.status(500)\n        res.body.should.be.a('object')\n        res.body.should.have.property('message')\n        res.body.should.have.property('error')\n    done()\n})",
                  "err": {},
                  "uuid": "2df003f3-cce7-407a-8bb8-cd0b552983a4",
                  "parentUUID": "9a97f899-d57a-4c8a-9096-7cce4c874fc2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should not POST a todo with a task field more than 30 characters",
                  "fullTitle": "Books /POST a new todo It should not POST a todo with a task field more than 30 characters",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let todo = {\n    task: 'abcdabcdabcdabcdabcdabcdabcdabcd'\n}\n        chai.request(server)\n.post('/api/todo')\n.send(todo)\n.end((err, res) => {\n        res.should.have.status(500)\n        res.body.should.be.a('object')\n        res.body.should.have.property('message')\n        res.body.should.have.property('error')\n    done()\n})",
                  "err": {},
                  "uuid": "4d133c57-5947-42ab-adfc-c1aa2da1d866",
                  "parentUUID": "9a97f899-d57a-4c8a-9096-7cce4c874fc2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should POST a todo with a valid task field",
                  "fullTitle": "Books /POST a new todo It should POST a todo with a valid task field",
                  "timedOut": false,
                  "duration": 280,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let todo = {\n    task: 'Test the api!!'\n}\n        chai.request(server)\n.post('/api/todo')\n.send(todo)\n.end((err, res) => {\n        res.should.have.status(201)\n        res.body.should.be.a('object')\n        res.body.message.should.equal('Task added successfully!!')\n        res.body.createdTodo.should.be.a('object')\n    done()\n})",
                  "err": {},
                  "uuid": "e785ceee-b590-4986-9857-6bfa3f6bfecd",
                  "parentUUID": "9a97f899-d57a-4c8a-9096-7cce4c874fc2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2df003f3-cce7-407a-8bb8-cd0b552983a4",
                "4d133c57-5947-42ab-adfc-c1aa2da1d866",
                "e785ceee-b590-4986-9857-6bfa3f6bfecd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 399,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2d302f97-9877-4a91-9239-207d67940464",
              "title": "/PATCH an existing todo",
              "fullFile": "C:\\Users\\User\\Desktop\\CLI-REST-Ingestor\\test\\todoRoute.test.js",
              "file": "\\test\\todoRoute.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should not process an invalid todo id",
                  "fullTitle": "Books /PATCH an existing todo It should not process an invalid todo id",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let todo = {\n    completed: 'true'\n}\n        chai.request(server)\n.patch('/api/todo/123')\n.send(todo)\n.end((err, res) => {\n        res.should.have.status(422)\n        res.body.should.be.a('object')\n        res.body.should.have.property('message')\n        res.body.message.should.equal('Task ID is not valid!!')\n    done()\n})",
                  "err": {},
                  "uuid": "95c1a929-e15c-4e62-acd9-3333e0adcca6",
                  "parentUUID": "2d302f97-9877-4a91-9239-207d67940464",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should not PATCH an undefined todo id",
                  "fullTitle": "Books /PATCH an existing todo It should not PATCH an undefined todo id",
                  "timedOut": false,
                  "duration": 267,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let todo = {\n    completed: 'true'\n}\n        chai.request(server)\n.patch('/api/todo/61c29b8a096af42f58d09512')\n.send(todo)\n.end((err, res) => {\n        res.should.have.status(404)\n        res.body.should.be.a('object')\n        res.body.should.have.property('message')\n        res.body.message.should.equal('No todo found for given id!!')\n    done()\n})",
                  "err": {},
                  "uuid": "9214a3d7-1cdb-4202-850c-20543915c227",
                  "parentUUID": "2d302f97-9877-4a91-9239-207d67940464",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "95c1a929-e15c-4e62-acd9-3333e0adcca6",
                "9214a3d7-1cdb-4202-850c-20543915c227"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 274,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c0de6f19-317f-4341-83b4-05cf578f3668",
              "title": "/DELETE an existing todo",
              "fullFile": "C:\\Users\\User\\Desktop\\CLI-REST-Ingestor\\test\\todoRoute.test.js",
              "file": "\\test\\todoRoute.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should not process an invalid todo id",
                  "fullTitle": "Books /DELETE an existing todo It should not process an invalid todo id",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .delete('/api/todo/123')\n    .end((err, res) => {\n            res.should.have.status(422)\n            res.body.should.be.a('object')\n            res.body.should.have.property('message')\n            res.body.message.should.equal('Todo ID is not valid!!')\n        done()\n    })",
                  "err": {},
                  "uuid": "33943964-12ac-4d5c-b0b9-7358b595709c",
                  "parentUUID": "c0de6f19-317f-4341-83b4-05cf578f3668",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should not DELETE an undefined todo id",
                  "fullTitle": "Books /DELETE an existing todo It should not DELETE an undefined todo id",
                  "timedOut": false,
                  "duration": 340,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .delete('/api/todo/61c29b8a096af42f58d09512')\n    .end((err, res) => {\n            res.should.have.status(404)\n            res.body.should.be.a('object')\n            res.body.should.have.property('message')\n            res.body.message.should.equal('Todo details not found!!')\n        done()\n    })",
                  "err": {},
                  "uuid": "a342a76b-6a15-489b-adba-f76708e1e817",
                  "parentUUID": "c0de6f19-317f-4341-83b4-05cf578f3668",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "33943964-12ac-4d5c-b0b9-7358b595709c",
                "a342a76b-6a15-489b-adba-f76708e1e817"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 346,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}