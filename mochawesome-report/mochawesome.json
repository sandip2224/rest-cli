{
  "stats": {
    "suites": 6,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2021-12-23T05:43:46.180Z",
    "end": "2021-12-23T05:43:54.437Z",
    "duration": 8257,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4563aa44-8955-49c7-adcb-66a08a4deeec",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6e08a0f7-1441-4471-98f9-98ca8fdfcfac",
          "title": "Todos",
          "fullFile": "C:\\Users\\User\\Desktop\\CLI-REST-Ingestor\\test\\todoRoute.test.js",
          "file": "\\test\\todoRoute.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Todos\"",
              "fullTitle": "Todos \"before each\" hook in \"Todos\"",
              "timedOut": false,
              "duration": 259,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Before each test we empty the database\n       todoModel.deleteMany({}, (err) => {\n           done()\n       })",
              "err": {},
              "uuid": "b02ff531-4727-4d2d-9edd-6959063fa7b6",
              "parentUUID": "6e08a0f7-1441-4471-98f9-98ca8fdfcfac",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "49217738-f139-4518-86bd-43a0ac2c9929",
              "title": "/GET all todos",
              "fullFile": "C:\\Users\\User\\Desktop\\CLI-REST-Ingestor\\test\\todoRoute.test.js",
              "file": "\\test\\todoRoute.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should GET all the todos",
                  "fullTitle": "Todos /GET all todos It should GET all the todos",
                  "timedOut": false,
                  "duration": 302,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get('/api/todos')\n    .end((err, res) => {\n        res.should.have.status(200)\n        res.body.should.have.property('count')\n        res.body.tasks.should.be.a('array')\n        done()\n    })",
                  "err": {},
                  "uuid": "0748c864-4d28-4313-ac88-0c0d3be8718f",
                  "parentUUID": "49217738-f139-4518-86bd-43a0ac2c9929",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0748c864-4d28-4313-ac88-0c0d3be8718f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 302,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "522e2f1a-0a29-4455-abcd-30b23cb455fe",
              "title": "/GET a todo",
              "fullFile": "C:\\Users\\User\\Desktop\\CLI-REST-Ingestor\\test\\todoRoute.test.js",
              "file": "\\test\\todoRoute.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should GET a single todo",
                  "fullTitle": "Todos /GET a todo It should GET a single todo",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get('/api/todo/123')\n    .end((err, res) => {\n        res.should.have.status(422)\n        res.body.message.should.be.a('string')\n        res.body.message.should.equal('Task ID is not valid!!')\n        done()\n    })",
                  "err": {},
                  "uuid": "4a816be2-b193-4988-beac-54ea65bb06d8",
                  "parentUUID": "522e2f1a-0a29-4455-abcd-30b23cb455fe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should not GET a non-existent todo",
                  "fullTitle": "Todos /GET a todo It should not GET a non-existent todo",
                  "timedOut": false,
                  "duration": 269,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get('/api/todo/61c29b8a096af42f58d09512')\n    .end((err, res) => {\n        res.should.have.status(404)\n        res.body.message.should.be.a('string')\n        res.body.message.should.equal('No todo found for given id!!')\n        done()\n    })",
                  "err": {},
                  "uuid": "dbaadadb-427e-4c96-a577-90032d7486da",
                  "parentUUID": "522e2f1a-0a29-4455-abcd-30b23cb455fe",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4a816be2-b193-4988-beac-54ea65bb06d8",
                "dbaadadb-427e-4c96-a577-90032d7486da"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 278,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c399d157-1b37-49eb-85e0-432e82e502a6",
              "title": "/POST a new todo",
              "fullFile": "C:\\Users\\User\\Desktop\\CLI-REST-Ingestor\\test\\todoRoute.test.js",
              "file": "\\test\\todoRoute.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should not POST a todo without a defined task field",
                  "fullTitle": "Todos /POST a new todo It should not POST a todo without a defined task field",
                  "timedOut": false,
                  "duration": 47,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let todo = {\n    task: ''\n}\nchai.request(server)\n    .post('/api/todo')\n    .send(todo)\n    .end((err, res) => {\n        res.should.have.status(500)\n        res.body.should.be.a('object')\n        res.body.should.have.property('message')\n        res.body.should.have.property('error')\n        done()\n    })",
                  "err": {},
                  "uuid": "a931255a-c690-4e73-9c53-8465c8bcdd55",
                  "parentUUID": "c399d157-1b37-49eb-85e0-432e82e502a6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should not POST a todo with a task field more than 30 characters",
                  "fullTitle": "Todos /POST a new todo It should not POST a todo with a task field more than 30 characters",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let todo = {\n    task: 'abcdabcdabcdabcdabcdabcdabcdabcd'\n}\nchai.request(server)\n    .post('/api/todo')\n    .send(todo)\n    .end((err, res) => {\n        res.should.have.status(500)\n        res.body.should.be.a('object')\n        res.body.should.have.property('message')\n        res.body.should.have.property('error')\n        done()\n    })",
                  "err": {},
                  "uuid": "c9deec77-8c42-4d97-8796-8c24c06b5709",
                  "parentUUID": "c399d157-1b37-49eb-85e0-432e82e502a6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should POST a todo with a valid task field",
                  "fullTitle": "Todos /POST a new todo It should POST a todo with a valid task field",
                  "timedOut": false,
                  "duration": 304,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let todo = {\n    task: 'Test the api!!'\n}\nchai.request(server)\n    .post('/api/todo')\n    .send(todo)\n    .end((err, res) => {\n        res.should.have.status(201)\n        res.body.should.be.a('object')\n        res.body.message.should.equal('Task added successfully!!')\n        res.body.createdTodo.should.be.a('object')\n        done()\n    })",
                  "err": {},
                  "uuid": "9a8b60e2-0f7b-48e6-b254-2bc6ce5369af",
                  "parentUUID": "c399d157-1b37-49eb-85e0-432e82e502a6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a931255a-c690-4e73-9c53-8465c8bcdd55",
                "c9deec77-8c42-4d97-8796-8c24c06b5709",
                "9a8b60e2-0f7b-48e6-b254-2bc6ce5369af"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 361,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9e7b0b7a-fc83-432a-b14d-1ee3b072de1f",
              "title": "/PATCH an existing todo",
              "fullFile": "C:\\Users\\User\\Desktop\\CLI-REST-Ingestor\\test\\todoRoute.test.js",
              "file": "\\test\\todoRoute.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should not process an invalid todo id",
                  "fullTitle": "Todos /PATCH an existing todo It should not process an invalid todo id",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let todo = {\n    completed: 'true'\n}\nchai.request(server)\n    .patch('/api/todo/123')\n    .send(todo)\n    .end((err, res) => {\n        res.should.have.status(422)\n        res.body.should.be.a('object')\n        res.body.should.have.property('message')\n        res.body.message.should.equal('Task ID is not valid!!')\n        done()\n    })",
                  "err": {},
                  "uuid": "f209a149-3457-4749-a043-79d09c273015",
                  "parentUUID": "9e7b0b7a-fc83-432a-b14d-1ee3b072de1f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should not PATCH an undefined todo id",
                  "fullTitle": "Todos /PATCH an existing todo It should not PATCH an undefined todo id",
                  "timedOut": false,
                  "duration": 271,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let todo = {\n    completed: 'true'\n}\nchai.request(server)\n    .patch('/api/todo/61c29b8a096af42f58d09512')\n    .send(todo)\n    .end((err, res) => {\n        res.should.have.status(404)\n        res.body.should.be.a('object')\n        res.body.should.have.property('message')\n        res.body.message.should.equal('No todo found for given id!!')\n        done()\n    })",
                  "err": {},
                  "uuid": "555a6d65-2232-420a-a335-5a2c3e34dd18",
                  "parentUUID": "9e7b0b7a-fc83-432a-b14d-1ee3b072de1f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f209a149-3457-4749-a043-79d09c273015",
                "555a6d65-2232-420a-a335-5a2c3e34dd18"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 278,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d6bc20e4-530f-4d57-8fe9-4a921b88ccab",
              "title": "/DELETE an existing todo",
              "fullFile": "C:\\Users\\User\\Desktop\\CLI-REST-Ingestor\\test\\todoRoute.test.js",
              "file": "\\test\\todoRoute.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should not process an invalid todo id",
                  "fullTitle": "Todos /DELETE an existing todo It should not process an invalid todo id",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .delete('/api/todo/123')\n    .end((err, res) => {\n        res.should.have.status(422)\n        res.body.should.be.a('object')\n        res.body.should.have.property('message')\n        res.body.message.should.equal('Todo ID is not valid!!')\n        done()\n    })",
                  "err": {},
                  "uuid": "5e6b0f5f-7eb9-4a78-aad4-44df58b82632",
                  "parentUUID": "d6bc20e4-530f-4d57-8fe9-4a921b88ccab",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should not DELETE an undefined todo id",
                  "fullTitle": "Todos /DELETE an existing todo It should not DELETE an undefined todo id",
                  "timedOut": false,
                  "duration": 349,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .delete('/api/todo/61c29b8a096af42f58d09512')\n    .end((err, res) => {\n        res.should.have.status(404)\n        res.body.should.be.a('object')\n        res.body.should.have.property('message')\n        res.body.message.should.equal('Todo details not found!!')\n        done()\n    })",
                  "err": {},
                  "uuid": "f65237e4-a2c2-49eb-86eb-3b3d1eeafe02",
                  "parentUUID": "d6bc20e4-530f-4d57-8fe9-4a921b88ccab",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5e6b0f5f-7eb9-4a78-aad4-44df58b82632",
                "f65237e4-a2c2-49eb-86eb-3b3d1eeafe02"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 356,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}